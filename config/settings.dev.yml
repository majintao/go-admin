## 本地开发配置
settings:
  application:
    # dev开发环境 test测试环境 prod线上环境
    mode: dev
    # 服务器ip，默认使用 0.0.0.0
    host: 0.0.0.0
    # 服务名称
    name: mildom-video
    # 端口号
    port: 8000 # 服务端口号
    readtimeout: 1
    writertimeout: 2
    # 数据权限功能开关
    enabledp: false
  logger:
    # 日志存放路径
    path: temp/logs
    # 日志输出，file：文件，default：命令行，其他：命令行
    stdout: '' #控制台日志，启用后，不输出到文件
    # 日志等级, trace, debug, info, warn, error, fatal
    level: trace
    # 数据库日志开关 dev模式，将自动开启
    enableddb: false
  jwt:
    # token 密钥，生产环境时及的修改
    secret: go-admin
    # token 过期时间 单位：秒
    timeout: 3600
  database:
    # 数据库类型 mysql，sqlite3， postgres
    driver: mysql
    # 数据库连接字符串 mysql 缺省信息 charset=utf8&parseTime=True&loc=Local&timeout=1000ms
    source: zhouzm:Nonolive~123@tcp(sg-web1.livenono.com:3306)/cms_db?charset=utf8&parseTime=True&loc=Local&timeout=1000ms
#  databases:
#    'locaohost:8000':
#      driver: mysql
#        # 数据库连接字符串 mysql 缺省信息 charset=utf8&parseTime=True&loc=Local&timeout=1000ms
#        source: user:password@tcp(127.0.0.1:3306)/dbname?charset=utf8&parseTime=True&loc=Local&timeout=1000ms
#      registers:
#        - sources:
#            - user:password@tcp(127.0.0.1:3306)/dbname?charset=utf8&parseTime=True&loc=Local&timeout=1000ms
  gen:
    # 代码生成读取的数据库名称
    dbname: dbname
    # 代码生成是使用前端代码存放位置，需要指定到src文件夹，相对路径
    frontpath: ../go-admin-ui/src
  extend: # 扩展项使用说明
    demo:
      name: data
  cache:
    redis:
      addr: sg-web1.livenono.com:6379
      password:
      db: 2
#    memory: '' key存在即可
  queue:
    memory:
      poolSize: 100
#    redis:
#      addr: 127.0.0.1:6379
#      password: xxxxxx
#      producer:
#        streamMaxLength: 100
#        approximateMaxLength: true
#      consumer:
#        visibilityTimeout: 60
#        bufferSize: 100
#        concurrency: 10
#        blockingTimeout: 5
#        reclaimInterval: 1
  locker:
    redis:
  grpc:
    registry:
      wh:
        connectTimeout: 1
        endpoints:
          - "127.0.0.1:2379"
        secure: false
        prefix: "wsd-reg" # 服务端注册到etcd的key前缀，配置客户端时候应该保持一致
    client:
      etcdserver:
        address: "etcd:///main" #etcd:/// 默认前缀， main 指的是应用执行二进制文件名称(发布平台将它默认为应用名称). 框架内部会把 main解析出来跟前缀做拼接，去etcd找到对应grpc服务端注册key
        balancerName: round_robin # 默认值,grpc客户端调用服务端采用的 轮训模式
        block: false # 默认值
        dialTimeout: 0 # 默认值
